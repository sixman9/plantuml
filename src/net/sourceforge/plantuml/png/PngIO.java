/* ========================================================================
 * PlantUML : a free UML diagram generator
 * ========================================================================
 *
 * (C) Copyright 2009, Arnaud Roques (for Atos Origin).
 *
 * Project Info:  http://plantuml.sourceforge.net
 * 
 * This file is part of PlantUML.
 *
 * PlantUML is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * PlantUML distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public
 * License for more details.
 *
 * You should have received a copy of the GNU General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301,
 * USA.
 *
 * [Java is a trademark or registered trademark of Sun Microsystems, Inc.
 * in the United States and other countries.]
 *
 * Original Author:  Arnaud Roques (for Atos Origin).
 *
 */
package net.sourceforge.plantuml.png;

import java.awt.image.RenderedImage;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.util.Iterator;

import javax.imageio.IIOImage;
import javax.imageio.ImageIO;
import javax.imageio.ImageWriter;

import com.sun.imageio.plugins.png.PNGMetadata;

public class PngIO {

	private static final String copyleft = "Generated by http://plantuml.sourceforge.net";

	public static void write(RenderedImage image, File file) throws IOException {
		// ImageIO.write(image, "png", file);
		// System.err.println("file="+file);
		// Thread.dumpStack();
		write(image, file, null);
		// new Metadata().readAndDisplayMetadata(file);
	}

	public static void write(RenderedImage image, OutputStream os) throws IOException {
		// ImageIO.write(image, "png", os);
		write(image, os, null);
	}

	public static void write(RenderedImage image, File file, String metadata) throws IOException {
		OutputStream os = null;
		try {
			os = new FileOutputStream(file);
			write(image, os, metadata);
		} finally {
			if (os != null) {
				os.close();
			}
		}
	}

	public static void write(RenderedImage image, OutputStream os, String metadata) throws IOException {

		final Iterator<ImageWriter> iterator = ImageIO.getImageWritersBySuffix("png");
		final ImageWriter imagewriter = iterator.next();

		imagewriter.setOutput(ImageIO.createImageOutputStream(os));

		// Create & populate metadata
		final PNGMetadata pngMetadata = new PNGMetadata();

		if (metadata != null) {
			pngMetadata.zTXt_keyword.add("plantuml");
			pngMetadata.zTXt_compressionMethod.add(new Integer(0));
			pngMetadata.zTXt_text.add(metadata);
//			System.err.println("metadata=" + metadata);
//			if (metadata.equals("Generated by http://plantuml.sourceforge.net")) {
//				throw new IllegalArgumentException();
//			}
		}

		pngMetadata.tEXt_keyword.add("copyleft");
		pngMetadata.tEXt_text.add(copyleft);

		// Render the PNG to file
		final IIOImage iioImage = new IIOImage(image, null, pngMetadata);
		// Attach the metadata
		imagewriter.write(null, iioImage, null);

	}

}
